package sequencememorization;

import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.UIManager;

public class SequenceMemorization {
    public static void main(String[] args) throws FileNotFoundException {
        Menu m = Menu.run();
        File file = new File("src/sequencememorization/data.in");
        Scanner fileInput = new Scanner(file);
        boolean wrong;
        while(fileInput.hasNextLine()) {
            wrong = false;
            String[] data = fileInput.nextLine().split(" ");
            for(String s:data) {
                String processed = processString(s);
                if(!processed.equalsIgnoreCase(m.getTextFieldSubmission().trim())) {
                    m.println("\nWRONG: It was " + processed + ".");
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        System.err.println("Interrupted");
                        System.exit(1);
                    }
                    m.setText("");
                    fileInput = new Scanner(file);
                    wrong = true;
                    break;
                } else {
                    m.print(s + " ");
                }
            }
            if(!wrong) m.println();
        }
        m.setText("");
        //m.setTextAreaVisible(false);
        while(fileInput.hasNextLine()) {
            String[] data = fileInput.nextLine().split(" ");
            for(String s:data) {
                String processed = processString(s);
                if(!processed.equalsIgnoreCase(m.getTextFieldSubmission().trim())) {
                    m.println("\nWRONG: It was " + processed + ".");
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        System.err.println("Interrupted");
                        System.exit(1);
                    }
                    m.setText("");
                    fileInput = new Scanner(file);
                    break;
                }
            }
        }
        System.out.println("Done!");
    }
    
    public static String processString(String s) {
        String output = "";
        for(char c:s.toCharArray()) {
            if(Character.isLetterOrDigit(c) || c == '\'' || c == '\"')
                output += c;
        }
        return output;
    }
}

class Menu extends JFrame {
    
    private int textFieldSubmitted = -1;
    
    /** Creates new form StartMenu */
    public Menu() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jTextField = new javax.swing.JTextField();
        jButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sequence Memorization");

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jTextArea.setEditable(false);
        jScrollPane1.setViewportView(jTextArea);

        jTextField.setText("");
        jTextField.addActionListener(this::textFieldSubmitted);

        jButton.setText("OK");
        jButton.addActionListener(this::textFieldSubmitted);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jTextField)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>
    
    public static Menu run() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels=javax.swing.UIManager.getInstalledLookAndFeels();
            for (UIManager.LookAndFeelInfo installedLookAndFeel : installedLookAndFeels) {
                if ("Nimbus".equals(installedLookAndFeel.getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeel.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        Menu sm = new Menu();
        
        java.awt.EventQueue.invokeLater(() -> {
            sm.setResizable(true);
            sm.setVisible(true);
        });
        
        return sm;
    }
    
    private void textFieldSubmitted(ActionEvent evt) {
        if(textFieldSubmitted == 0) textFieldSubmitted = 1;
    }
    
    public void setTextAreaVisible(boolean visible) {
        jTextArea.setVisible(visible);
    }
    
    public void print(String s) {
        jTextArea.setText(jTextArea.getText() + s);
    }
    
    public void println(String s) {
        jTextArea.setText(jTextArea.getText() + s + "\n");
    }
    
    public void println() {
        jTextArea.setText(jTextArea.getText() + "\n");
    }
    
    public void setText(String s) {
        jTextArea.setText(s);
    }
    
    public String getTextFieldSubmission() {
        textFieldSubmitted = 0;
        while(textFieldSubmitted != 1) {
            try {
                Thread.sleep(250);
            } catch (InterruptedException ex) {
                System.err.println("Interrupted");
                System.exit(1);
            }
        }
        String output = jTextField.getText();
        jTextField.setText("");
        return output;
    }
    
    // Variables declaration - do not modify
    private JButton jButton;
    private JScrollPane jScrollPane1;
    private JTextArea jTextArea;
    private JTextField jTextField;
    // End of variables declaration
}
